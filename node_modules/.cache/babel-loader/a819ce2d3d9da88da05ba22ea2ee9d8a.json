{"ast":null,"code":"var _jsxFileName = \"/var/project/api-call-demo/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { loginSchema } from \"../axios/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  // State declaration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors,\n    touched\n  } = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: loginSchema,\n\n    async onSubmit(values) {\n      setIsSubmitting(true);\n      alert({\n        values\n      });\n      setIsSubmitting(false);\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-100 w-100 d-flex align-items-center justify-content-center\",\n      children: isSubmitting === true ? `Submitting` : /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"text-start\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            className: (errors.email && touched.email ? \"input-error\" : null) + \" form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            value: values.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), errors.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            className: (errors.email && touched.email ? \"input-error\" : null) + \" form-control\",\n            id: \"password\",\n            value: values.password,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), errors.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Mz98nELSxxaSUl3ZdKJNWtEKlfM=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/var/project/api-call-demo/src/pages/Login.jsx"],"names":["useFormik","React","useState","loginSchema","Login","isSubmitting","setIsSubmitting","handleSubmit","handleChange","values","errors","touched","initialValues","email","password","validationSchema","onSubmit","alert"],"mappings":"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","sourcesContent":["import { useFormik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { loginSchema } from \"../axios/helper\";\n\nexport const Login = () => {\n  // State declaration\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { handleSubmit, handleChange, values, errors, touched } = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: loginSchema,\n    async onSubmit(values) {\n      setIsSubmitting(true);\n      alert({values});\n      setIsSubmitting(false);\n    },\n  });\n  return (\n    <div className=\"login-page\">\n      <div className=\"h-100 w-100 d-flex align-items-center justify-content-center\">\n        {isSubmitting === true ? `Submitting` :\n        <form\n          className=\"text-start\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email address\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className={(errors.email && touched.email ? \"input-error\" : null) + \" form-control\"}\n              aria-describedby=\"emailHelp\"\n              value={values.email}\n            />\n            {errors.email ? (\n              <span className=\"error-text\">{errors.email}</span>\n            ) : null}\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={(errors.email && touched.email ? \"input-error\" : null) + \" form-control\"}\n              id=\"password\"\n              value={values.password}\n              autoComplete=\"off\"\n            />\n            {errors.password ? (\n              <span className=\"error-text\">{errors.password}</span>\n            ) : null}\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n        </form>}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}